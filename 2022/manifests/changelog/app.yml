# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: uploads-local-ssd
#   namespace: ${NAMESPACE}
# spec:
#   accessModes:
#   - ReadWriteOnce
#   resources:
#     requests:
#       storage: 200Gi
#   storageClassName: local-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: ${NAMESPACE}
  labels:
    app: app
    # https://keel.sh/docs/#policies
    keel.sh/policy: force
    keel.sh/match-tag: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
        # Required by grafana-agent: https://github.com/grafana/agent/issues/339#issue-789433621
        name: app
      annotations:
        prometheus.io/port: "4000"
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - app
              topologyKey: "kubernetes.io/hostname"
      initContainers:
        # - name: restore-uploads
        #   image: thechangelog/backups:202201
        #   imagePullPolicy: Always
        #   command: ["/usr/local/bin/restore_uploads_from_s3"]
        #   env:
        #     - name: AWS_ACCESS_KEY_ID
        #       valueFrom:
        #         secretKeyRef:
        #           name: backups-aws
        #           key: access_key_id
        #     - name: AWS_SECRET_ACCESS_KEY
        #       valueFrom:
        #         secretKeyRef:
        #           name: backups-aws
        #           key: secret_access_key
        #     - name: AWS_REGION
        #       value: us-east-1
        #     - name: AWS_S3_BUCKET
        #       value: changelog-com-backups
        #     - name: UPLOADS_PATH
        #       value: "/uploads"
        #   volumeMounts:
        #     - mountPath: "/uploads"
        #       name: uploads-local-ssd
        # - name: backup-uploads
        #   image: thechangelog/backups:202201
        #   imagePullPolicy: Always
        #   command: ["/usr/local/bin/backup_uploads_to_s3"]
        #   env:
        #     - name: AWS_ACCESS_KEY_ID
        #       valueFrom:
        #         secretKeyRef:
        #           name: backups-aws
        #           key: access_key_id
        #     - name: AWS_SECRET_ACCESS_KEY
        #       valueFrom:
        #         secretKeyRef:
        #           name: backups-aws
        #           key: secret_access_key
        #     - name: AWS_REGION
        #       value: us-east-1
        #     - name: AWS_S3_BUCKET
        #       value: changelog-com-backups
        #     - name: UPLOADS_PATH
        #       value: "/uploads"
        #   volumeMounts:
        #     - mountPath: "/uploads"
        #       name: uploads-local-ssd
        # - name: backup-db
        #   image: thechangelog/backups:202201
        #   imagePullPolicy: Always
        #   command: ["/usr/local/bin/backup_db_to_s3"]
        #   env:
        #     - name: AWS_ACCESS_KEY_ID
        #       valueFrom:
        #         secretKeyRef:
        #           name: backups-aws
        #           key: access_key_id
        #     - name: AWS_SECRET_ACCESS_KEY
        #       valueFrom:
        #         secretKeyRef:
        #           name: backups-aws
        #           key: secret_access_key
        #     - name: AWS_REGION
        #       value: us-east-1
        #     - name: AWS_S3_BUCKET
        #       value: changelog-com-backups
        #     - name: PGHOST
        #       value: db
        #     - name: PGDATABASE
        #       value: changelog
        #     - name: INSTANCE
        #       value: ${NAMESPACE}_
        #     - name: PGUSER
        #       value: postgres
        #     - name: PGPASSWORD
        #       valueFrom:
        #         secretKeyRef:
        #           name: postgres
        #           key: password
      containers:
        - name: app
          env:
            # - name: ALGOLIA_APPLICATION_ID
            #   valueFrom:
            #     secretKeyRef:
            #       name: algolia
            #       key: application_id
            # - name: ALGOLIA_API_KEY
            #   valueFrom:
            #     secretKeyRef:
            #       name: algolia
            #       key: api_key
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: access_key_id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws
                  key: secret_access_key
            - name: AWS_REGION
              value: us-east-1
            - name: AWS_ASSETS_BUCKET
              value: changelog-assets
            - name: AWS_UPLOADS_HOST
              value: https://changelog-assets.s3.amazonaws.com
            # - name: BUFFER_TOKEN
            #   valueFrom:
            #     secretKeyRef:
            #       name: buffer
            #       key: token
            # - name: CM_API_TOKEN
            #   valueFrom:
            #     secretKeyRef:
            #       name: campaignmonitor
            #       key: api_token
            - name: CM_SMTP_TOKEN
              valueFrom:
                secretKeyRef:
                  name: campaignmonitor
                  key: smtp_token
            # - name: COVERALLS_REPO_TOKEN
            #   valueFrom:
            #     secretKeyRef:
            #       name: coveralls
            #       key: repo_token
            - name: DB_HOST
              value: db
            - name: DB_NAME
              value: changelog
            - name: DB_USER
              value: postgres
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: postgres
                  key: password
            # - name: GITHUB_API_TOKEN
            #   valueFrom:
            #     secretKeyRef:
            #       name: github
            #       key: api_token
            # - name: GITHUB_CLIENT_ID
            #   valueFrom:
            #     secretKeyRef:
            #       name: github
            #       key: client_id
            # - name: GITHUB_CLIENT_SECRET
            #   valueFrom:
            #     secretKeyRef:
            #       name: github
            #       key: client_secret
            - name: HCAPTCHA_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: hcaptcha
                  key: secret_key
            - name: RECAPTCHA_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: recaptcha
                  key: secret_key
            # - name: HN_USER
            #   valueFrom:
            #     secretKeyRef:
            #       name: hackernews
            #       key: user
            # - name: HN_PASS
            #   valueFrom:
            #     secretKeyRef:
            #       name: hackernews
            #       key: pass
            # - name: PLUSPLUS_SLUG
            #   valueFrom:
            #     secretKeyRef:
            #       name: plusplus
            #       key: slug
            - name: PORT
              value: "4000"
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: app
                  key: secret_key_base
            # - name: SHOPIFY_API_KEY
            #   valueFrom:
            #     secretKeyRef:
            #       name: shopify
            #       key: api_key
            # - name: SHOPIFY_API_PASSWORD
            #   valueFrom:
            #     secretKeyRef:
            #       name: shopify
            #       key: api_password
            - name: SIGNING_SALT
              valueFrom:
                secretKeyRef:
                  name: app
                  key: signing_salt
            # - name: SLACK_APP_API_TOKEN
            #   valueFrom:
            #     secretKeyRef:
            #       name: slack
            #       key: app_api_token
            # - name: SLACK_DEPLOY_WEBHOOK
            #   valueFrom:
            #     secretKeyRef:
            #       name: slack
            #       key: deploy_webhook
            # - name: SLACK_INVITE_API_TOKEN
            #   valueFrom:
            #     secretKeyRef:
            #       name: slack
            #       key: invite_api_token
            - name: STATIC_URL_HOST
              value: cdn22.changelog.com
            # - name: TWITTER_CONSUMER_KEY
            #   valueFrom:
            #     secretKeyRef:
            #       name: twitter
            #       key: consumer_key
            # - name: TWITTER_CONSUMER_SECRET
            #   valueFrom:
            #     secretKeyRef:
            #       name: twitter
            #       key: consumer_secret
            - name: URL_HOST
              value: 22.changelog.com
            - name: GRAFANA_URL
              value: "https://changelog.grafana.net"
            - name: GRAFANA_DATASOURCE_ID
              value: "grafanacloud-changelog-prom"
            # - name: GRAFANA_API_KEY
            #   valueFrom:
            #     secretKeyRef:
            #       name: grafana
            #       key: api_key
            - name: PROMETHEUS_BEARER_TOKEN_PROM_EX
              value: ""
              # valueFrom:
              #   secretKeyRef:
              #     name: promex
              #     key: bearer_token
            # - name: SENTRY_AUTH_TOKEN
            #   valueFrom:
            #     secretKeyRef:
            #       name: sentry
            #       key: auth_token
          image: thechangelog/changelog.com:assets-to-s3
          imagePullPolicy: Always
          # command:
          #   - iex
          #   - --sname
          #   - debug
          #   - -S
          #   - mix
          #   - phx.server
          # command: ["sleep", "infinity"]
          ports:
            - name: phoenix
              containerPort: 4000
          resources:
            requests:
              cpu: 2
              memory: 4Gi
            limits:
              cpu: 2
              memory: 4Gi
          readinessProbe:
            httpGet:
              path: /health
              port: phoenix
              httpHeaders:
                - name: Host
                  value: 127.0.0.1
            periodSeconds: 15
            timeoutSeconds: 14
          startupProbe:
            httpGet:
              path: /health
              port: phoenix
              httpHeaders:
                - name: Host
                  value: 127.0.0.1
            failureThreshold: 30
            periodSeconds: 10
          # volumeMounts:
          #   - mountPath: "/app/priv/uploads"
          #     name: uploads-local-ssd
      # volumes:
      #   - name: uploads-local-ssd
      #     persistentVolumeClaim:
      #       claimName: uploads-local-ssd
---
apiVersion: v1
kind: Pod
metadata:
  name: restore-db
  namespace: ${NAMESPACE}
spec:
  containers:
    - name: db
      image: thechangelog/backups:202201
      imagePullPolicy: Always
      command: ["sleep", "infinity"]
      env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: backups-aws
              key: access_key_id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: backups-aws
              key: secret_access_key
        - name: AWS_REGION
          value: us-east-1
        - name: AWS_S3_BUCKET
          value: changelog-com-backups
        - name: PGHOST
          value: db
        - name: PGDATABASE
          value: changelog
        - name: PGUSER
          value: postgres
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres
              key: password
