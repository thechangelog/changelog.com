name: "Dagger on Fly.io"

on:
  workflow_call:
    secrets:
      FLY_WIREGUARD:
        required: true

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code..."
        uses: actions/checkout@v3

      - name: "Set up WireGuard for Fly.io..."
        run: |
          echo "üîí Install WireGuard & friends..."
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends wireguard-tools openresolv
          echo "üîê Configure WireGuard tunnel..."
          printf "${{ secrets.FLY_WIREGUARD }}" | sudo tee /etc/wireguard/fly.conf
          sudo wg-quick up fly
          echo "ü©ª Check IPv6 routes..."
          sudo ip -6 route list
          echo "ü©ª Check DNS resolution..."
          sudo resolvconf -v

      - uses: actions/setup-go@v4
        with:
          go-version: "1.20"
          cache-dependency-path: "magefiles/go.sum"

      - name: "Start remote Dagger Engine..."
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          FLY_PRIMARY_DAGGER_ENGINE_MACHINE_ID: "${{ vars.FLY_PRIMARY_DAGGER_ENGINE_MACHINE_ID }}"
          FLY_SECONDARY_DAGGER_ENGINE_MACHINE_ID: "${{ vars.FLY_SECONDARY_DAGGER_ENGINE_MACHINE_ID }}"
        run: |
          cd magefiles
          go run main.go -w ../ fly:DaggerStart

      - name: "Build, test, publish & deploy using remote Dagger Engine..."
        env:
          DAGGER_ENGINE_HOST: ${{ vars.DAGGER_ENGINE_HOST }}
          DAGGER_ENGINE_HOST_PORT: ${{ vars.DAGGER_ENGINE_HOST_PORT }}
          FLY_DNS_SERVER: ${{ vars.FLY_DNS_SERVER }}
          IMAGE_OWNER: "${{ vars.IMAGE_OWNER }}"
          GHCR_USERNAME: "${{ github.actor }}"
          GHCR_PASSWORD: "${{ secrets.GHCR_PASSWORD }}"
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          R2_API_HOST: "${{ secrets.R2_API_HOST }}"
          R2_ACCESS_KEY_ID: "${{ secrets.R2_ACCESS_KEY_ID }}"
          R2_SECRET_ACCESS_KEY: "${{ secrets.R2_SECRET_ACCESS_KEY }}"
          R2_ASSETS_BUCKET: "${{ env.R2_ASSETS_BUCKET }}"
          OBAN_KEY_FINGERPRINT: "${{ secrets.OBAN_KEY_FINGERPRINT }}"
          OBAN_LICENSE_KEY: "${{ secrets.OBAN_LICENSE_KEY }}"
        run: |
          echo "ü§® Can we ping ${FLY_DNS_SERVER:?must be set}?"
          ping6 -c 3 "$FLY_DNS_SERVER"
          echo "ü§® Can we resolve ${DAGGER_ENGINE_HOST:?must be set} via ${FLY_DNS_SERVER}?"
          dig +short "$DAGGER_ENGINE_HOST" AAAA @"$FLY_DNS_SERVER"

          export DAGGER_ENGINE_HOST_IP6="$(dig +short "$DAGGER_ENGINE_HOST" AAAA @"$FLY_DNS_SERVER")"
          echo "ü§® Can we ping $DAGGER_ENGINE_HOST_IP6?"
          ping6 -c 3 "$DAGGER_ENGINE_HOST_IP6"
          echo "ü§® Can we connect to Dagger running on $DAGGER_ENGINE_HOST_IP6?"
          nc -vz6 "$DAGGER_ENGINE_HOST_IP6" "${DAGGER_ENGINE_HOST_PORT:?must be set}"

          cd magefiles
          echo "üö¶ Run on tcp://[$DAGGER_ENGINE_HOST_IP6]:$DAGGER_ENGINE_HOST_PORT..."
          _EXPERIMENTAL_DAGGER_RUNNER_HOST="tcp://[$DAGGER_ENGINE_HOST_IP6]:$DAGGER_ENGINE_HOST_PORT" go run main.go -w ../ ci cd

      - name: "Stop remote Dagger Engine..."
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          FLY_PRIMARY_DAGGER_ENGINE_MACHINE_ID: "${{ vars.FLY_PRIMARY_DAGGER_ENGINE_MACHINE_ID }}"
          FLY_SECONDARY_DAGGER_ENGINE_MACHINE_ID: "${{ vars.FLY_SECONDARY_DAGGER_ENGINE_MACHINE_ID }}"
        run: |
          cd magefiles
          go run main.go -w ../ fly:DaggerStop

      - name: "Announce deploy in #dev Slack..."
        if: ${{ github.repository == 'thechangelog/changelog.com' && github.ref_name == 'master' }}
        uses: rtCamp/action-slack-notify@v2
        env:
          MSG_MINIMAL: "commit,actions url"
          SLACK_CHANNEL: dev
          SLACK_USERNAME: "GitHub Actions"
          SLACK_FOOTER: "Just got shipped to https://changelog.com"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
